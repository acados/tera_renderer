name: Releases

on: push
#  push:
#    tags:
#    - '*'

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            architecture: linux-amd64
          - runs-on: macos-latest
            architecture: osx-amd64
          - runs-on: windows-latest
            architecture: windows-amd64

    name: Build on ${{ matrix.runs-on }}

    steps:
      - name: Setup | Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          cargo build --verbose --release;

      - name: Upload t_renderer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: t_renderer-${{ matrix.architecture }}
          path: ${{ runner.os == 'Windows' && 'target\\release\\t_renderer.exe' || 'target/release/t_renderer' }}

  build-on-aarch:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    name: Build on aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build in aarch64 Docker
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu_latest
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apt-get update
            apt-get install -y curl build-essential
            curl https://sh.rustup.rs -sSf | sh -s -- -y

          run: |
            $HOME/.cargo/bin/cargo build --verbose --release;
            cp target/release/t_renderer /artifacts/t_renderer

      - name: Upload t_renderer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: t_renderer-aarch64
          path: artifacts/t_renderer
